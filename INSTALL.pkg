This file explains how to install the GNU plotutils (plotting utilities)
package.  The file README summarizes the contents of the package.  Please
send bug reports to <bug-gnu-utils@gnu.org>, and suggestions for
longer-range improvements to both <bug-gnu-utils@gnu.org> and the principal
author and current maintainer, Robert Maier <rsm@math.arizona.edu>.

These are package-specific installation instructions: PLEASE READ THEM.

Before reading them, you should glance through the generic installation
instructions in the file INSTALL.  The instructions in that file may be
summed up as follows.  You build a GNU package by typing `./configure' and
then `make'.  After building, you may run validation tests on the package
by typing `make check'.  To install the package, you type `make install'.
A documentation file, in `info' format, is installed as part of this
process.  You may produce a copy of the documentation for the package, in
dvi format, by typing `make dvi'.  This assumes that you have the TeX
document formatter installed.

The most important point not mentioned in the file INSTALL is the following.

    If you have a working C++ compiler and would like to build the
    `libplotter' class library and the pic2plot utility, both of which are
    written in C++, you should add the `--enable-libplotter' option to the
    `./configure' command.

The rest of this file discusses possible installation problems.  There are
some additional options that you can add to the `./configure' command.
They are mentioned too, in passing.

----------------------------------------------------------------------

Possible problems not mentioned in the INSTALL file are summarized in the
following three sections.  They cover:

(A) Problems related to building the GNU libplot graphics library.

(B) Miscellaneous problems.

(C) Problems related to support for the X Window System.

----------------------------------------------------------------------

A. This section covers problems related to building both the unshared
version and the shared version (DLL) of the GNU libplot graphics library.
Except on older systems, GNU libplot will be built as both an unshared
library and a DLL.  A script called `libtool' is used for this.  
By default, the application programs `graph', `plot', `tek2plot', and
`plotfont' will be configured to use the DLL.

If for any reason you wish to disable support for the shared version of
libplot, you may begin by doing `./configure --disable-shared' instead of
`./configure'.

    
A.1. On Silicon Graphics systems running IRIX 6.x, you may get error
messages about `GP overflow'.  If so, you should do `make distclean' and
start over, this time doing two things differently.  (1) After running
`./configure', modify, by hand, the file `./libtool'.  In that file, change
the line "archive_cmds=...", which will be located at about line #170, to
include the options `-multigot -shared', rather than just `-shared'.
(2) Do `make CFLAGS="-O -multigot"' instead of just `make'.

A.2. On some HP-UX systems, the `sed' program is broken.  It is possible
that this may cause unusual problems for libtool, the script that prepares
the libplot library.  If mysterious problems occur during the compilation
and linking of libplot on an HP-UX system, you should install a working
version of `sed', such as GNU sed, and try again.  There are also problems
on HP-UX systems related to the X Window System (see below).

----------------------------------------------------------------------

B. This section covers miscellaneous installation problems.


B.1. On some systems, there are potential minor problems having to do with
installing (rather than building) the libplot DLL.  By default, it is
installed in `/usr/local/lib'.  On some systems you may need to run a
command (such as `ldconfig'), or even reboot, to let your system know that
a new DLL has been installed.  On some systems you may need to add
`/usr/local/lib' to your LD_LIBRARY_PATH environment variable in order to
use the `graph', `plot', `tek2plot', `plotfont', and `pic2plot' programs
after they have been installed.  You will be cautioned about problems of
this sort, if any, at installation time.

B.2. If you have a recent laser printer that can use the 35 standard
Postscript fonts even when in PCL 5 or HP-GL/2 mode, such as a 4000-series
HP LaserJet, you may wish to add the `--enable-ps-fonts-in-pcl' option
to `./configure'.  No additional font installation is required, since the
Postscript fonts are internal to the printer.

B.3. By default, the 45 fonts that are built into recent HP LaserJets are
available to the plotting utilities when you produce PCL 5 or HP-GL/2
output, e.g., when you do `graph -T pcl' or `graph -T hpgl'.  You may wish
to have these 45 fonts available when you produce X or Postscript output,
also.  To arrange this, you would add the `--enable-lj-fonts-in-x' option
and/or the `--enable-lj-fonts-in-ps' option to `./configure'.  Of course
you would also need to acquire the fonts and install them.  This is fairly
easy.  Instructions are in the file INSTALL.fonts.

B.4. If the installation process has any problem preparing or installing
the documentation files (in `info' format), you should install the current
release of the GNU texinfo package, which contains the current version of
the GNU `makeinfo' and `install-info' programs.  That should fix the
problem.

B.5. As part of the installation process, the header file ./include/plot.h
is installed in a place on your system where the gcc C compiler will find
it.  If you wish to use cc as well as (or instead of) gcc, you should copy
plot.h manually to the directory `/usr/include', where cc will find it.
plot.h is not installed in `/usr/include' by default, since many
administrators prefer not to add files to that directory.

B.6. If you are installing this package with DJGPP under MS-DOS, the very
first thing you should do is rename the file `install-sh' in this directory
to `install.sh'.  This is on account of filename length limitations in
MS-DOS.  If `./configure' reports that it is unable to find certain
executable programs that it should in fact find, you may also need to
replace many of the occurrences of `test -f' in `./configure' and
`./ltmain' by `test -x' (to compensate for the ".exe" extension that MS-DOS
uses).  These potential problems are reported by Michel de Ruiter
<mdruiter@cs.vu.nl>.  Contact him for additional information on MS-DOS
installations.

B.7.  One or more of the validation tests performed by doing `make check'
may fail on account of incorrect formatting of floating-point numbers.
This is the case if you are installing with DJGPP under MS-DOS, for
example.  It may also occur if you are installing the package on an old
NeXT machine.  Failures of this sort are more or less harmless.  But if any
of the validation tests should fail on any other system, please report it
to <bug-gnu-utils@gnu.org>.

----------------------------------------------------------------------

C. This section covers installation problems related to the X Window
System.  If for any reason you wish to omit the X Window System support,
you may begin by doing `./configure --without-x' instead of `./configure'.


C.1. To make maximum use of the X support in this package, you will need to
have the 35 standard Postscript fonts installed on your X server.  For
instructions on installing Type 1 versions of these fonts, clones of which
are included in the package, see the file ./INSTALL.fonts.

C.2. Also, to make maximum use of the support for the `xfig' drawing
editor, you will need to make a small change to the source for `xfig', and
recompile it.  (The change makes it use the full set of 35 standard
Postscript fonts.)  For this too, see the file ./INSTALL.fonts.

C.3. There is a possible installation problem having to do with X widget
sets.  By default this package uses Athena widgets, which are supported on
most but not all machines.  Some machines provide Motif widgets instead of
Athena widgets.  On such machines (e.g. Hewlett-Packard systems running
HP/UX, and some IBM systems) you should begin by doing `./configure
--with-motif' instead of just `./configure' to ensure that the software is
configured correctly.  

The only advantage of using Motif widgets, which are not free, is that you
may be able to use Motif's drag-and-drop facility to drag graphics out of
popped-up X Windows, e.g., the window popped up by `graph -T X'.

C.4. Old Hewlett-Packard HP/UX systems that are running HP/UX 9.xx or
earlier have Motif widgets, but the Motif files are stored in unusual
places.  On such systems, besides doing `./configure --with-motif' you
may need to do

	make CFLAGS="-O -I/usr/include/Motif1.2 -L/usr/lib/Motif1.2"

rather than just `make'.

C.5. On at least some recent HP/UX systems, it may be possible to use the
free Athena widgets rather than the Motif widgets.  As noted, the Athena
widgets are not included in most releases of HP/UX.  However, HP made them
available at an ftp site, and recommended that they be installed in the
tree /usr/contrib/X11R5/{include,lib}.  If you have a recent HP/UX system
and have installed Athena widgets as HP recommends, and wish to use them
instead of Motif widgets, you should do `./configure' and then

	make CFLAGS="-O -L/usr/local/X11R5/lib -L/usr/contrib/X11R5/lib
			-I/usr/contrib/X11R5/include"

rather than just `make'.

C.6. On Suns that are running SunOS 4.1.x with the ancient OpenWindows 3.0
version of the X Window System, the Xmu and Xt libraries may not link
correctly.  If so, you will get error messages dealing with "undefined
symbols" when linking the five programs `graph', `plot', `tek2plot',
`plotfont', and `pic2plot'.  To solve this problem, please contact your
local Sun office and request the following patches:

  Patch i.d.      Description
  100512-02       4.1.x OpenWindows 3.0 libXt Jumbo patch
  100573-03       4.1.x OpenWindows 3.0 undefined symbols when using
                          shared libXmu

If you are using Sun's cc as your compiler, you may be able to work around
this problem not by contacting Sun, but by modifying the Makefiles in the
five directories `graph', `plot', `tek2plot', `plotfont', and `pic2plot'
by hand.  Here is how you can do this.

The following explanation applies to graph/Makefile; the four other
Makefiles are treated similarly.  In graph/Makefile, locate the line
beginning

graph$(EXEEXT):

The second line after that should begin with a tab character.  After the
tab, it should read:

$(LINK) $(graph_LDFLAGS) $(graph_OBJECTS) $(graph_LDADD) $(LIBS)

Replace this line by:

LD_LIBRARY_PATH="../libplot/.libs:$LD_LIBRARY_PATH" cc -O -o .libs/graph \
graph.o ../lib/libcommon.a ../lib/libfontlist.a -lplot -L/usr/lib/X11 \
-lXaw -Bstatic -lXmu -lXt -Bdynamic -lXext -lX11 -lm

(as before, preceded by a tab character).  You would modify the four other
Makefiles similarly, except that the two occurrences of `graph' on the
above line would be replaced by `plot', `tek2plot', `plotfont', and
`pic2plot', in turn.

If you are using gcc rather than cc as your compiler, this approach will
not work; but it may be possible to work around the problem by extracting
the two files named `sharedlib.o' from libXmu.a and libXt.a and adding them
to the list of objects to be linked.  This is tricky, and contacting Sun to
request the two patches, instead, is recommended.

A much better workaround is to obtain and install the X11R6 version of the
X Window System.  Unlike the version that came with SunOS 4.1.x, it
supports rotated and affinely transformed (`sheared') fonts.

C.7. A problem similar to #C.6 (i.e., error messages about "unresolved
symbols") may occur on Suns running SunOS 4.1.x that are equipped with much
more recent versions of the X Window System libraries.  The problem may
occur if the package is compiled with cc rather than gcc.  The workaround
is similar, except that the modified lines should end with

-lXaw -lXmu -Bstatic -lXt -Bdynamic -lXext -lX11 -lm

instead of

-lXaw -Bstatic -lXmu -lXt -Bdynamic -lXext -lX11 -lm
