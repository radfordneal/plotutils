This file explains how to install the GNU plotutils (plotting utilities)
package.  The file README summarizes the contents of the package.  Please
send bug reports to <bug-gnu-utils@gnu.org>, and suggestions for
longer-range improvements to both <bug-gnu-utils@gnu.org> and the principal
author and current maintainer, Robert Maier <rsm@math.arizona.edu>.

These are package-specific installation instructions: PLEASE READ THEM.
*** Item A.1 is especially important. ***

Before reading the below, you should glance through the generic
installation instructions in the file INSTALL.  The instructions in that
file may be summed up as follows.  You build a GNU package by typing
`./configure' and then `make'.  After building, you may run validation
tests on the package by typing `make check'.  To install the package, you
type `make install'.  A documentation file, in `info' format, is installed
as part of this process.  You may produce a copy of the documentation for
the package, in dvi format, by typing `make dvi'.  This assumes that you
have the TeX document formatter installed.

----------------------------------------------------------------------

Problems not mentioned in the INSTALL file are summarized in the following
three sections.  They cover:

(A) Problems related to building and installing the GNU libplot graphics
library.  

(B) Miscellaneous problems.

(C) Problems related to support for the X Window System.

----------------------------------------------------------------------

A. This section covers installation problems related to both the unshared
version and the shared version (DLL) of the GNU libplot graphics library.
On most systems, especially recent ones, the default is for GNU libplot to
be installed as a DLL.  A script called `libtool' is used for this.  Also
by default, the application programs `graph', `plot', `tek2plot', and
`plotfont' are configured to use this DLL.

If for any reason you wish to disable support for the shared version, you
may begin by doing `./configure --disable-shared' instead of `./configure'.
Note though that two of the problem reports below (#A.2 and #A.3a) mention
difficulties in creating the _unshared_ version, rather than the shared
version.

A.1. You may already have a version of GNU libplot installed on your
system.  Check to see if there are any files named libplot.* in the library
installation directory, which by default is /usr/local/lib.  If so, 
YOU SHOULD MOVE OR RENAME THEM BEFORE BUILDING THE PACKAGE.  The reason is
that the installation scripts may erroneously try to link with them.
At the very least, this will affect the outcome of the tests run by 
doing `make check'.

A.2. This package has been successfully built and installed on Suns running
Solaris 2.5 (with the SunPro 4.0 `cc' compiler) and Solaris 2.6 (with the
SunPro 4.0 `cc' and with GNU gcc).  The shared version of libplot will be
created if the package is compiled with gcc.

However, some problems have been reported with the linking of libplot on
Suns running Solaris (2.5 and 2.6, at least).  These problems are difficult
to reproduce and may be due to an incorrectly configured compiler/linker
setup.  Suns running Solaris do not come with compilers, and either Sun's
SunPro compiler `cc' or the GNU compiler `gcc' must be installed.
(A BSD-compatible compiler `ucbcc' is also supported.)  Compiler installation
under Solaris is not a trivial matter.  Usually, users must set environment
variables for the correct compiler and related utilities to be executed.
Some of the reported problems with this package on Solaris systems may have
been due to incorrect or incomplete compiler installations, which caused a
mixture of SunPro, GNU, and BSD-compatible tools to be used during
installation.

The most frequently reported problem on Solaris systems is the following.
At some point during compilation or installation you may get an error
message like ".libs/libplot.a: No such file", or "make: Fatal error:
Command failed for target `libplot.la'".  This is an indication that the
unshared version of the libplot library was somehow not created as it
should have been.

Here are some possible workarounds for this problem on Solaris systems.

Possible Solaris Workaround 1. You may not actually need the unshared
version of libplot, especially if you are compiling with gcc rather than
cc.  Try starting over by doing a `make distclean', this time doing
`./configure --disable-static' rather than just `./configure'.  Only the
shared version of libplot will be built, and there should be no error
message.

Possible Solaris Workaround 2. The error message may occur not during
compiling and linking, but only at the very end of the installation, when
you do a `make install'.  This indicates that with the exception of an
unneeded library, everything was created correctly, despite appearances.
So in principle there may be nothing to worry about.  Actually, the error
message interrupts the installation before many files are installed.  To
complete the installation you should `cd' into the each of the seven
directories `plot', `tek2plot', `plotfont', `graph', `include', `info', and
`doc', being sure to type `make install' in each.

Possible Solaris Workaround 3. The preceding workaround is not very
convenient.  If the unshared version of libplot (normally named in
`libplot/.libs/libplot.a') is not created as it should be, but is not
actually needed, you may be able to fool the installation process into
thinking that it exists.  If you get the error message when doing a `make
install', try doing `touch libplot/.libs/libplot.a' to create an empty file
with the same name, and then do `make install' to see what happens.

Possible Solaris Workaround 4. None of the preceding three workarounds will
work if the unshared library libplot.a is truly needed; for example, if the
compilation process on your system does not build a shared version of
libplot.  This is the case if you are compiling with cc rather than gcc, in
particular.  However, in that case you may be able to create libplot.a by
hand.

    1.  Go to the directory ./libplot, and examine the Makefile.
    2.  Extract the long list of .lo files beginning on the 
	"cond1libplot_la_OBJECTS:" line, and put it in a file called OBJECTS.
	(The list starts with "api.lo" and ends with "y_openpl.lo".)
    3.  Manually run the command     
		ar cru .libs/libplot.a `cat OBJECTS`
        in that directory.

With luck, this will create the unshared library ./libs/libplot.a.  
You may then go back to the top directory and type `make' to continue
the installation.

If none of these four possible workarounds succeed, please report it to
bug-gnu-utils@gnu.org.

A.3. There are problems with the linking of the libplot library on DEC Alphas
running OSF 3.x, though apparently not OSF 4.0.  The problems are due to
bugs (buffer overrun problems) in DEC's shell and/or other command-line
utilities.  They occur because a large number of object modules are linked
together to construct the library.

A.3a. On DEC Alphas running OSF 3.x (though apparently not OSF 4.x), a
problem similar to the Solaris problem discussed in #2, above, has been
reported to occur: the libplot library libplot.la or libplot.a being
missing or not containing any files.  It is due to a bug (a buffer overrun
problem) in the version of /bin/sh that comes with OSF/1.  It should be
possible to work around the problem by using one of the same techniques
explained in #A.2.

A.3b. On DEC Alphas running OSF 3.2 (though apparently not OSF 4.x), you
may get a message like "Segmentation Fault printf: line too long" during
the installation process.  This is due to a bug (a buffer overrun problem)
in DEC's `printf' command.  The fix is to obtain and install the GNU
shellutils package, which includes a working version of `printf'.  It has
been reported that renaming /usr/ucb/printf, for the duration of the
installation, will also work around the problem.

A.4. On Silicon Graphics systems running IRIX 6.x, you may get error messages
about `GP overflow'.  If so, you should do `make distclean' and start over,
this time doing two things differently.  (1) After running `./configure',
modify, by hand, the file `./libtool'.  In that file, change the line
"archive_cmds=...", which will be located at about line #125, to include
the options `-multigot -shared', rather than just `-shared'.
(2) Do `make CFLAGS="-O -multigot"' instead of just `make'.

A.5. On Silicon Graphics systems running IRIX 6.3 (though not IRIX 6.4 or 5.x),
it has been reported that during the linking of the libplot DLL you may get
error messages like

  ld: ERROR 48: Cannot access registry file ./so_locations (Invalid argument) \
- ignored.
  ld: FATAL 51: Can't assign virtual addresses for libplot.so within specified\
 range.  Please check your registry file ./so_locations.
 
As of this writing a workaround, if any, is unknown.  If you encounter this
problem, you should do a `make distclean' and then `./configure
--disable-shared', to avoid creating the libplot DLL.

A.6. On some HP-UX systems, the sed(1) program is broken.  It is possible
that this may cause unusual problems for libtool, the script that prepares
the libplot library.  If mysterious problems occur during the compilation
and linking of libplot on an HP-UX system, you should install a working
version of sed(1), such as GNU sed, and try again.  There are also problems
on HP-UX systems related to the X Window System (see below).

A.7. On some systems, there are potential minor problems having to do with
installing (rather than building) the libplot DLL.  By default, it is
installed in /usr/local/lib.  On some systems you may need to run a command
(such as `ldconfig'), or even reboot, to let your system know that a new
DLL has been installed.  On some systems you may need to add /usr/local/lib
to your LD_LIBRARY_PATH environment variable in order to use the `graph',
`plot', and `tek2plot' programs after they have been installed.  You will
be cautioned about problems of this sort, if any, at installation time.

----------------------------------------------------------------------

B. This section covers miscellaneous installation problems.


B.1. If the installation process has any problem preparing or installing
the documentation files (in `info' format), you should install the current
release of the GNU texinfo package, which contains the current version of
the GNU `makeinfo' program.  That should fix the problem.

B.2. As part of the installation process, the header file ./include/plot.h
is installed in a place on your system where the gcc C compiler will find
it.  If you wish to use cc as well as (or instead of) gcc, you should copy
plot.h manually to the directory /usr/include, where cc will find it.
plot.h is not installed in /usr/include by default, since many
administrators prefer not to add files to that directory.

B.3. If you are installing this package with DJGPP under MS-DOS, the very
first thing you should do is rename the file `install-sh' in this directory
to `install.sh'.  This is on account of filename length limitations in
MS-DOS.  If `./configure' reports that it is unable to find certain
executable programs that it should in fact find, you may need to replace
many of the occurrences of `test -f' in `./configure' and `./ltmain' by
`test -x' (to compensate for the ".exe" extension that MS-DOS uses).  These
potential problems are reported by Michel de Ruiter <mdruiter@cs.vu.nl>.
Contact him for additional information on MS-DOS installations.

B.4. If you are installing this package with DJGPP under MS-DOS, one or
more of the validation tests performed by doing `make check' may fail on
account of incorrect formatting of floating-point numbers.  The same is
true if you are installing the package on an old NeXT machine.  Failures of
this sort are more or less harmless.  But if any of the validation tests
should fail on any other system, please report it to
<bug-gnu-utils@gnu.org>.

B.5. By default, the 45 fonts that are built into recent HP LaserJets are
available to the plotting utilities when you produce HP-GL/2 output, e.g.,
when you do `graph -T hpgl'.  You may wish to have them available when you
produce X or Postscript output, also.  To do this, you should do
`./configure --enable-lj-fonts' instead of `./configure'.  Of course you
will need to acquire the fonts and install them.  This is very easy; for
use by the X Window System, at least.  Instructions are in the file
INSTALL.fonts.

----------------------------------------------------------------------

C. This section covers installation problems related to the X Window
System.  If for any reason you wish to omit the X Window System support,
you may begin by doing `./configure --without-x' instead of `./configure'.


C.1. To make maximum use of the X support in this package, you will need to
have the 35 standard Postscript fonts installed on your X server.  For
instructions on installing Type 1 versions of these fonts, clones of which
are included in the package, see the file ./INSTALL.fonts.

C.2. Also, to make maximum use of the support for the `xfig' drawing
editor, you will need to make a small change to the source for `xfig', and
recompile it.  (The change makes it use the full set of 35 standard
Postscript fonts.)  For this too, see the file ./INSTALL.fonts.

C.3. There is a possible installation problem having to do with X widget
sets.  By default this package uses Athena widgets, which are supported on
most but not all machines.  Some machines provide Motif widgets instead of
Athena widgets.  On such machines (e.g. Hewlett-Packard systems running
HP/UX, and some IBM systems) you should begin by doing `./configure
--with-motif' instead of just `./configure' to ensure that the software is
configured correctly.

C.4. Hewlett-Packard HP/UX systems that are running HP/UX 9.xx or earlier
have Motif widgets, but the Motif files are stored in unusual places.  On
such systems, besides doing `./configure --with-motif' you should do

	make CFLAGS="-O -I/usr/include/Motif1.2 -L/usr/lib/Motif1.2"

rather than just `make'.

C.5. On at least some recent HP/UX systems, it may be possible to use
Athena widgets rather than Motif widgets.  As noted, the Athena widgets are
not included in most releases of HP/UX.  However, HP made them available at
an ftp site, and recommended that they be installed in the tree
/usr/contrib/X11R5/{include,lib}.  If you have a recent HP/UX system and
have installed Athena widgets as HP recommends, and wish to use them
instead of Motif widgets, you should do `./configure' and then

	make CFLAGS="-O -L/usr/local/X11R5/lib -L/usr/contrib/X11R5/lib
			-I/usr/contrib/X11R5/include"

rather than just `make'.

C.6. On SGI systems, if you do `./configure --with-motif' to use Motif
widgets, and compile the package with cc rather than gcc, you may need to
do `make install' BEFORE doing `make check'.  That is because the
uninstalled utilities may not link properly with the uninstalled libplot
library, causing segmentation errors when the validation tests are run, or
"Cannot successfully map soname" error messages.

C.7. On Suns that are running SunOS 4.1.x with the ancient OpenWindows 3.0
version of the X Window System, the Xmu and Xt libraries may not link
correctly.  If so, you will get error messages dealing with "undefined
symbols" when linking the programs `graph', `plot', `tek2plot', and
`plotfont'.  To solve this problem, please contact your local Sun office
and request the following patches:

  Patch i.d.      Description
  100512-02       4.1.x OpenWindows 3.0 libXt Jumbo patch
  100573-03       4.1.x OpenWindows 3.0 undefined symbols when using
                          shared libXmu

If you are using Sun's cc as your compiler, you may be able to work around
this problem not by contacting Sun, but simply by typing

    make X_TOOLKIT_LIBS="-lXaw -Bstatic -lXmu -lXt -Bdynamic"

rather than `make'.  If you are using gcc as your compiler, this will not
work; but it is possible to work around the problem by extracting the two
files named `sharedlib.o' from libXmu.a and libXt.a and adding them to the
list of objects to be linked.  This is tricky, and contacting Sun to
request the two patches, instead, is recommended.

A much better workaround is to obtain and install the X11R6 version of the
X Window System.  Unlike the version that came with SunOS 4.1.x, it
supports rotated and affinely transformed (`sheared') fonts.

C.8. A problem similar to #C.7 (i.e., error messages about "unresolved
symbols") may occur on Suns running SunOS 4.1.x, equipped with more recent
versions of the X Window System libraries.  The problem may occur if the
package is compiled with cc rather than gcc, and the shared version of
libplot is not built.  A workaround is to force the use of the unshared
version of the libXt library by doing:

    make X_TOOLKIT_LIBS="-lXaw -lXmu -Bstatic -lXt -Bdynamic"

rather than just `make'.
