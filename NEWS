News on the plotutils+ package.  See ONEWS for the news file for 
the GNU plotutils package that plotutils+ is based on, and OONEWS 
for even older news.

Version 3.1, 2020-12-21:

Changes in this version are largely aimed at making the 'graph'
program work better for interactively displaying data produced by
other programs.  With the new facilities in this release, pipelines
such as the following are recommended for this task:

    program | graph -n         # line plot
    program | graph -n -p      # point plot
    program | graph -n -ly     # line plot with logarithmic y axis
    program | graph -n -p -gy  # point plot with horizontal grid lines 
    program | graph -n -p1     # point plot with small points
    program | graph -n -C      # line plot with black line (not red)
    program | graph -n -y0     # Plot positive data with y axis from 0

Once the program has finished, the graph program (and the X window
showing the plot) can be terminated with Control-C, or by closing the
plot window (using whatever means the window manager provides).

The program may output multiple data sets, separated by blank lines,
which (by default with -n) will be plotted in different colours.

Some selection of these options can of course be included automatically 
using either a shell alias or a shell script.  For a shell script, a
final line to run the graph program is best done as "exec graph ...",
since this results in cleaner behaviour when Control-C is used.

Details of changes:

graph:   

* A new set of default plot parameters can now be enabled with the
  --new-defaults (or -n) command-line option.  These defaults 
  improve the aesthetics of plots and reduce wasted space.  They 
  are especially appropriate for plotting in an X window, and -TX
  to specify that output device is set by default when -n is used.  
  Among the other options enabled by default by -n are --no-input, 
  --wait, --toggle-use-color, and --pad.

* There is a new --pad command-line option that toggles whether the 
  limits dervied from data for the axes are padded by expanding them 
  outward by 0.05 of their range.  The default is off for old defaults 
  and on for new defaults.  Also, with new defaults, the -R option 
  always applies, regardless of whether the limits are set by command 
  line options or derived from the data.

* There is a new --wait (or -i) command-line option, relevant only for
  X Window display (with -TX).  If it is set, the 'graph' program will
  wait until the plot window has been closed by the user before
  exitting (or the user may terminate the program manually, e.g., with
  Control-C).  It is set by default with --new-options (-n).

* There is a new --no-input comand-line option, relevant only for X
  Window display (with -TX).  If it is set, keyboard and mouse input
  not accepted from the plot window. This avoids accidently closing
  the window with a stray mouse click (or by typing 'q'), and also
  prevents focus from moving to the plot window, away from the window
  used to issue the 'graph' command, which would often be inconvenient.
  It is set by default with --new-options (-n).

* There is a new --points or -p command-line option, which has the
  effect of -m -1 and -S 16 POINT_SIZE, where POINT_SIZE is the
  optional argument of --points (default 0.03).  This is convenient for 
  specifying that the plot should have points only, without lines.

* When the size for the --line-width (-W), --symbol (-S), and the new 
  --points (-p) commands is 1 or greater (too big to make sense), the
  value is divided by 100 (for -S and -p) or 1000 (for -W).  This 
  allows for more brief specification of typically-desired values.

* The --grid-style or -g command-line option now has two new styles,
  which allow for only vertical grid lines or only horizontal grid lines.
  The style synonyms of "x", "y", "xy", or "yx" are now allowed, specifying
  that x (vertical), y (horizontal), or both grid lines should be drawn.
  (The default is still no grid lines.)

* The default for --bitmap-size with -TX is 570x570+5+5 with the
  new defaults.  With new or old defaults, the default size of 570x570
  is prepended if the argument of --bitmap-size specifies only a position
  (e.g., -10+20 becomes 570x570-10+20).  With new defaults, an argument
  specifying only the size has +5+5 appended (e.g., 300x300 becomes
  300x300+5+5).

* When axis labels are in scientific notation, the times sign is now
  represented by an "x" character.  This avoids some spacing anomolies
  that occur when the actual times symbol is used.  Trailing zeros
  after a decimal point in the mantissa are now suppressed.  The
  spacing in this notation is now also slightly more compact.

* The text and numeric labels on the vertical axis is now slightly
  closer to the axis.

* Fixed a bug in which optional arguments immediately after one-letter 
  options were not handled properly.  (E.g, -S17 now works properly.)

# Fixed bugs regarding "bumping" of colours from one dataset to another,
  when no lines are drawn (eg, -m0 or -m-1).

libplot: 

* The API for X Plotters now has a new WAIT_ON_DELETE parameter, which
  if set to "yes" causes a window delete operation to wait until the
  window or windows that were popped up are closed by the user. The
  default is "no" (the old behaviour).

* The API for X Plotters now has a new NO_INPUT parameter, which if
  set to "yes" suppresses mouse and keyboard input. This also prevents
  input focus from moving to the plot window. The default is "no", in
  which case typing 'q' or clicking the mouse in the window causes it
  to close.

* The process spawned to handle events for an X Window will now no
  longer display any error messages. These previously appeared at
  times such as when the user manual closed the window.


Version 3.0, 2020-11-30:

This release is functionally identical to GNU plotutils 2.6, except
for some bug fixes.  Some fixes are from the Debian version, and
others are new to plotutils+.
